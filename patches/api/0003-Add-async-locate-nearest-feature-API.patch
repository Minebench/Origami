From e3c4266ad386c8973591c1b8fd3168d4f7c485e4 Mon Sep 17 00:00:00 2001
From: Phoenix616 <mail@moep.tv>
Date: Wed, 27 Nov 2019 19:06:08 +0100
Subject: [PATCH] Add async locate nearest feature API

---
 src/main/java/org/bukkit/World.java | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java
index 2d22ab30..1bc4f182 100644
--- a/src/main/java/org/bukkit/World.java
+++ b/src/main/java/org/bukkit/World.java
@@ -2926,6 +2926,32 @@ public interface World extends PluginMessageRecipient, Metadatable {
     @Nullable
     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);
 
+    // Origami start - async feature search. adapted logic from findNearestMapFeature
+    /**
+     * Find the closest nearby structure of a given {@link StructureType}.
+     * Finding unexplored structures with this function will not block as it
+     * uses async chunk loading to check for structures.
+     * <p>
+     * The {@code radius} is not a rigid square radius. Each structure may alter
+     * how many chunks to check for each iteration. Do not assume that only a
+     * radius x radius chunk area will be checked. For example,
+     * {@link StructureType#WOODLAND_MANSION} can potentially check up to 20,000
+     * blocks away (or more) regardless of the radius used.
+     * <p>
+     * This will <i>not</i> load or generate chunks. This will keep looking further and
+     * further out in order to find the structure if you only want unexplored.
+     *
+     * @param origin where to start looking for a structure
+     * @param structureType the type of structure to find
+     * @param radius the radius, in chunks, around which to search
+     * @param findUnexplored true to only find unexplored structures
+     * @return a future that will be resolved with the closest {@link Location},
+     *          or null if no structure of the specified type exists.
+     */
+    @NotNull
+    java.util.concurrent.CompletableFuture<Location> locateNearestStructureAsync(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);
+    // Origami end
+
     // Spigot start
     /**
      * Returns the view distance used for this world.
-- 
2.18.0.windows.1

