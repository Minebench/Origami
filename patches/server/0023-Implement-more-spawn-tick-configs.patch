From b302daf9a8d5265d2c4684269b6b7ca8fc63f6eb Mon Sep 17 00:00:00 2001
From: Phoenix616 <mail@moep.tv>
Date: Mon, 2 Mar 2020 18:50:43 +0100
Subject: [PATCH] Implement more spawn tick configs

---
 .../java/de/minebench/origami/OrigamiConfig.java     | 12 ++++++++++++
 .../net/minecraft/server/ChunkProviderServer.java    | 12 +++++++++++-
 2 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/src/main/java/de/minebench/origami/OrigamiConfig.java b/src/main/java/de/minebench/origami/OrigamiConfig.java
index 5306a1215..35e16cfc0 100644
--- a/src/main/java/de/minebench/origami/OrigamiConfig.java
+++ b/src/main/java/de/minebench/origami/OrigamiConfig.java
@@ -111,6 +111,11 @@ public final class OrigamiConfig {
             return config.getInt("worlds." + worldName + "." + path, config.getInt("worlds.default." + path, dfl));
         }
 
+        private long getLong(final String path, final long dfl) {
+            config.addDefault("worlds.default." + path, Long.valueOf(dfl));
+            return config.getLong("worlds." + worldName + "." + path, config.getLong("worlds.default." + path, dfl));
+        }
+
         private double getDouble(final String path, final double dfl) {
             config.addDefault("worlds.default." + path, Double.valueOf(dfl));
             return config.getDouble("worlds." + worldName + "." + path, config.getDouble("worlds.default." + path, dfl));
@@ -201,6 +206,13 @@ public final class OrigamiConfig {
             enderCrystalAttackRadius = getDouble("ender-crystal.attack-radius", enderCrystalAttackRadius);
             enderCrystalAttackDamage = (float) getDouble("ender-crystal.attack-damage", enderCrystalAttackDamage);
         }
+
+        public long ticksPerAmbientSpawn = 40;
+        public long ticksPerWaterSpawn = 20;
+        private void mobSpawnTicks() {
+            ticksPerAmbientSpawn = getLong("ticks-per.ambient-spawns", ticksPerAmbientSpawn);
+            ticksPerWaterSpawn = getLong("ticks-per.water-spawns", ticksPerWaterSpawn);
+        }
     }
 
     public static boolean teleportingOfVehiclesWithPassenger = true;
diff --git a/src/main/java/net/minecraft/server/ChunkProviderServer.java b/src/main/java/net/minecraft/server/ChunkProviderServer.java
index 0de82202e..27c5354eb 100644
--- a/src/main/java/net/minecraft/server/ChunkProviderServer.java
+++ b/src/main/java/net/minecraft/server/ChunkProviderServer.java
@@ -623,6 +623,11 @@ public class ChunkProviderServer extends IChunkProvider {
             int k = this.world.getGameRules().getInt(GameRules.RANDOM_TICK_SPEED);
             BlockPosition blockposition = this.world.getSpawn();
             boolean flag2 = world.ticksPerAnimalSpawns != 0L && worlddata.getTime() % world.ticksPerAnimalSpawns == 0L; // CraftBukkit // PAIL: TODO monster ticks
+            // Origami start - Implement more spawn tick configs
+            boolean spawnMonsterThisTick = world.ticksPerMonsterSpawns != 0L && worlddata.getTime() % world.ticksPerMonsterSpawns == 0L;
+            boolean spawnAmbientThisTick = world.origamiConfig.ticksPerAmbientSpawn != 0L && worlddata.getTime() % world.origamiConfig.ticksPerAmbientSpawn == 0L;
+            boolean spawnWaterThisTick = world.origamiConfig.ticksPerWaterSpawn != 0L && worlddata.getTime() % world.origamiConfig.ticksPerWaterSpawn == 0L;
+            // Origami end
 
             this.world.getMethodProfiler().enter("naturalSpawnCount");
             this.world.timings.countNaturalMobs.startTiming(); // Paper - timings
@@ -685,22 +690,27 @@ public class ChunkProviderServer extends IChunkProvider {
 
                                 // CraftBukkit start - Use per-world spawn limits
                                 int limit = enumcreaturetype.b();
+                                boolean spawnThisTick = true; // Origami - Implement more spawn tick configs
                                 switch (enumcreaturetype) {
                                     case MONSTER:
+                                        spawnThisTick = spawnMonsterThisTick; // Origami - Implement more spawn tick configs
                                         limit = world.getWorld().getMonsterSpawnLimit();
                                         break;
                                     case CREATURE:
+                                        spawnThisTick = flag2; // spawnAnimalThisTick // Origami - Implement more spawn tick configs
                                         limit = world.getWorld().getAnimalSpawnLimit();
                                         break;
                                     case WATER_CREATURE:
+                                        spawnThisTick = spawnWaterThisTick; // Origami - Implement more spawn tick configs
                                         limit = world.getWorld().getWaterAnimalSpawnLimit();
                                         break;
                                     case AMBIENT:
+                                        spawnThisTick = spawnAmbientThisTick; // Origami - Implement more spawn tick configs
                                         limit = world.getWorld().getAmbientSpawnLimit();
                                         break;
                                 }
 
-                                if (limit == 0) {
+                                if (limit == 0 || !spawnThisTick) { // Origami - Implement more spawn tick configs
                                     continue;
                                 }
                                 // CraftBukkit end
-- 
2.25.1.windows.1

