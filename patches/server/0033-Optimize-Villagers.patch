From d3608386784e34b48a8d8c49a3b651a62a088667 Mon Sep 17 00:00:00 2001
From: Phoenix616 <mail@moep.tv>
Date: Mon, 25 May 2020 22:00:20 +0100
Subject: [PATCH] Optimize Villagers

- Set limit of stream to predicate's max count
---
 src/main/java/net/minecraft/server/BehaviorFindPosition.java | 3 ++-
 src/main/java/net/minecraft/server/BehaviorWalkHome.java     | 3 ++-
 src/main/java/net/minecraft/server/SensorNearestBed.java     | 3 ++-
 3 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/src/main/java/net/minecraft/server/BehaviorFindPosition.java b/src/main/java/net/minecraft/server/BehaviorFindPosition.java
index 37006ec1b..ef50bc10f 100644
--- a/src/main/java/net/minecraft/server/BehaviorFindPosition.java
+++ b/src/main/java/net/minecraft/server/BehaviorFindPosition.java
@@ -44,6 +44,7 @@ public class BehaviorFindPosition extends Behavior<EntityCreature> {
             }
         };
         Stream<BlockPosition> stream = villageplace.a(this.a.c(), predicate, new BlockPosition(entitycreature), 48, VillagePlace.Occupancy.HAS_SPACE);
+        stream = stream.limit(5); // Origami - limit stream size
         PathEntity pathentity = entitycreature.getNavigation().a(stream, this.a.d());
 
         if (pathentity != null && pathentity.h()) {
@@ -53,7 +54,7 @@ public class BehaviorFindPosition extends Behavior<EntityCreature> {
                 villageplace.a(this.a.c(), (blockposition1) -> {
                     return blockposition1.equals(blockposition);
                 }, blockposition, 1);
-                entitycreature.getBehaviorController().setMemory(this.b, (Object) GlobalPos.create(worldserver.getWorldProvider().getDimensionManager(), blockposition));
+                entitycreature.getBehaviorController().setMemory(this.b, GlobalPos.create(worldserver.getWorldProvider().getDimensionManager(), blockposition)); // Origami - decompile fix
                 PacketDebug.c(worldserver, blockposition);
             });
         } else if (this.f < 5) {
diff --git a/src/main/java/net/minecraft/server/BehaviorWalkHome.java b/src/main/java/net/minecraft/server/BehaviorWalkHome.java
index 6b87e7218..0d92ea9da 100644
--- a/src/main/java/net/minecraft/server/BehaviorWalkHome.java
+++ b/src/main/java/net/minecraft/server/BehaviorWalkHome.java
@@ -54,6 +54,7 @@ public class BehaviorWalkHome extends Behavior<EntityLiving> {
             }
         };
         Stream<BlockPosition> stream = villageplace.a(VillagePlaceType.q.c(), predicate, new BlockPosition(entityliving), 48, VillagePlace.Occupancy.ANY);
+        stream = stream.limit(5); // Origami - limit stream size
         PathEntity pathentity = entitycreature.getNavigation().a(stream, VillagePlaceType.q.d());
 
         if (pathentity != null && pathentity.h()) {
@@ -61,7 +62,7 @@ public class BehaviorWalkHome extends Behavior<EntityLiving> {
             Optional<VillagePlaceType> optional = villageplace.c(blockposition);
 
             if (optional.isPresent()) {
-                entityliving.getBehaviorController().setMemory(MemoryModuleType.WALK_TARGET, (Object) (new MemoryTarget(blockposition, this.a, 1)));
+                entityliving.getBehaviorController().setMemory(MemoryModuleType.WALK_TARGET, (new MemoryTarget(blockposition, this.a, 1))); // Origami - decompile fix
                 PacketDebug.c(worldserver, blockposition);
             }
         } else if (this.c < 5) {
diff --git a/src/main/java/net/minecraft/server/SensorNearestBed.java b/src/main/java/net/minecraft/server/SensorNearestBed.java
index b22f0c4a2..8b3125f82 100644
--- a/src/main/java/net/minecraft/server/SensorNearestBed.java
+++ b/src/main/java/net/minecraft/server/SensorNearestBed.java
@@ -42,6 +42,7 @@ public class SensorNearestBed extends Sensor<EntityInsentient> {
                 }
             };
             Stream<BlockPosition> stream = villageplace.a(VillagePlaceType.q.c(), predicate, new BlockPosition(entityinsentient), 48, VillagePlace.Occupancy.ANY);
+            stream = stream.limit(5); // Origami - limit stream size
             PathEntity pathentity = entityinsentient.getNavigation().a(stream, VillagePlaceType.q.d());
 
             if (pathentity != null && pathentity.h()) {
@@ -49,7 +50,7 @@ public class SensorNearestBed extends Sensor<EntityInsentient> {
                 Optional<VillagePlaceType> optional = villageplace.c(blockposition);
 
                 if (optional.isPresent()) {
-                    entityinsentient.getBehaviorController().setMemory(MemoryModuleType.NEAREST_BED, (Object) blockposition);
+                    entityinsentient.getBehaviorController().setMemory(MemoryModuleType.NEAREST_BED, blockposition); // Origami - decompile fix
                 }
             } else if (this.b < 5) {
                 this.a.long2LongEntrySet().removeIf((entry) -> {
-- 
2.25.1.windows.1

