From f7b75da6ab0bdecc903ab6887e2fa15d6f458c5e Mon Sep 17 00:00:00 2001
From: Phoenix616 <mail@moep.tv>
Date: Sun, 22 Dec 2019 19:29:21 +0100
Subject: [PATCH] Add ability for ender crystals to attack monsters

This is adapted from @BillyGalbreath's Purpur patch that makes ender
crystals attack phantoms
---
 .../de/minebench/origami/OrigamiConfig.java   |  6 +++
 .../net/minecraft/server/DamageSource.java    |  1 +
 .../minecraft/server/EntityEnderCrystal.java  | 48 +++++++++++++++++++
 .../net/minecraft/server/IEntityAccess.java   |  1 +
 4 files changed, 56 insertions(+)

diff --git a/src/main/java/de/minebench/origami/OrigamiConfig.java b/src/main/java/de/minebench/origami/OrigamiConfig.java
index 0e169e53a..2d38f4f7f 100644
--- a/src/main/java/de/minebench/origami/OrigamiConfig.java
+++ b/src/main/java/de/minebench/origami/OrigamiConfig.java
@@ -148,6 +148,12 @@ public final class OrigamiConfig {
         private void pigmenDontTargetUnlessHit() {
             pigmenDontTargetUnlessHit = getBoolean("pigmen.dont-target-unless-hit", pigmenDontTargetUnlessHit);
         }
+        public double enderCrystalAttackRadius = 0.0D;
+        public float enderCrystalAttackDamage = 1.0F;
+        private void crystalTurrets() {
+            enderCrystalAttackRadius = getDouble("ender-crystal.attack-radius", enderCrystalAttackRadius);
+            enderCrystalAttackDamage = (float) getDouble("ender-crystal.attack-damage", enderCrystalAttackDamage);
+        }
     }
 
     public static boolean teleportingOfVehiclesWithPassenger = true;
diff --git a/src/main/java/net/minecraft/server/DamageSource.java b/src/main/java/net/minecraft/server/DamageSource.java
index 816d301f1..766c487f2 100644
--- a/src/main/java/net/minecraft/server/DamageSource.java
+++ b/src/main/java/net/minecraft/server/DamageSource.java
@@ -81,6 +81,7 @@ public class DamageSource {
         return (new EntityDamageSourceIndirect("thrown", entity, entity1)).c();
     }
 
+    public static DamageSource indirectMagic(Entity entity, @Nullable Entity owner) { return c(entity, owner); } // Origami - OBFHELPER
     public static DamageSource c(Entity entity, @Nullable Entity entity1) {
         return (new EntityDamageSourceIndirect("indirectMagic", entity, entity1)).setIgnoreArmor().setMagic();
     }
diff --git a/src/main/java/net/minecraft/server/EntityEnderCrystal.java b/src/main/java/net/minecraft/server/EntityEnderCrystal.java
index a57d0089d..b148d7376 100644
--- a/src/main/java/net/minecraft/server/EntityEnderCrystal.java
+++ b/src/main/java/net/minecraft/server/EntityEnderCrystal.java
@@ -13,6 +13,11 @@ public class EntityEnderCrystal extends Entity {
     private static final DataWatcherObject<Optional<BlockPosition>> c = DataWatcher.a(EntityEnderCrystal.class, DataWatcherRegistry.m);
     private static final DataWatcherObject<Boolean> d = DataWatcher.a(EntityEnderCrystal.class, DataWatcherRegistry.i);
     public int b;
+    // Origami start - EnderCrystal turrets
+    private EntityCreature targetCreature;
+    private int creatureBeamTicks = 0;
+    private int idleCooldown = 0;
+    // Origami end
 
     public EntityEnderCrystal(EntityTypes<? extends EntityEnderCrystal> entitytypes, World world) {
         super(entitytypes, world);
@@ -49,9 +54,52 @@ public class EntityEnderCrystal extends Entity {
                 }
                 // CraftBukkit end
             }
+
+            // Origami start - EnderCrystal turrets
+            if (world.origamiConfig.enderCrystalAttackRadius <= 0 || --idleCooldown > 0) {
+                return;
+            }
+
+            if (targetCreature == null) {
+                for (EntityCreature creature : world.getEntitiesByClass(EntityCreature.class, getBoundingBox().grow(world.origamiConfig.enderCrystalAttackRadius))) {
+                    if ((creature.getEntityType().getEnumCreatureType() == EnumCreatureType.MONSTER || creature instanceof IMonster)
+                            && creature.getEntityType() != EntityTypes.ENDER_DRAGON
+                            && creature.getEntityType() != EntityTypes.ENDERMAN
+                            && creature.getEntityType() != EntityTypes.ENDERMITE
+                            && creature.hasLineOfSight(this)) {
+                        if (attackCreature(creature)) {
+                            break;
+                        }
+                    }
+                }
+            } else if (--creatureBeamTicks <= 0 || !targetCreature.isAlive() || !targetCreature.hasLineOfSight(this)) {
+                forgetCreature();
+            } else {
+                setBeamTarget(new BlockPosition(targetCreature).shift(EnumDirection.DOWN));
+            }
         }
+    }
+
+    private boolean attackCreature(EntityCreature creature) {
+        if (new org.bukkit.event.entity.EntityTargetLivingEntityEvent(getBukkitEntity(), creature.getBukkitCreature(), org.bukkit.event.entity.EntityTargetEvent.TargetReason.RANDOM_TARGET)
+                .callEvent()) {
+            creatureBeamTicks = 20;
+            targetCreature = creature;
+            setBeamTarget(new BlockPosition(targetCreature).shift(EnumDirection.DOWN));
+            world.sendSoundEffect(null, this.locX(), this.locY(), this.locZ(), SoundEffects.ENTITY_ENDERMAN_TELEPORT, SoundCategory.BLOCKS, 2f, 0.6f);
+            targetCreature.damageEntity(DamageSource.indirectMagic(this, this), world.origamiConfig.enderCrystalAttackDamage);
+            return true;
+        }
+        return false;
+    }
 
+    private void forgetCreature() {
+        targetCreature = null;
+        setBeamTarget(null);
+        creatureBeamTicks = 0;
+        idleCooldown = 60;
     }
+    // Origami end
 
     @Override
     protected void b(NBTTagCompound nbttagcompound) {
diff --git a/src/main/java/net/minecraft/server/IEntityAccess.java b/src/main/java/net/minecraft/server/IEntityAccess.java
index 5135308fb..3040f4810 100644
--- a/src/main/java/net/minecraft/server/IEntityAccess.java
+++ b/src/main/java/net/minecraft/server/IEntityAccess.java
@@ -34,6 +34,7 @@ public interface IEntityAccess {
         });
     }
 
+    default <T extends Entity> List<T> getEntitiesByClass(Class<? extends T> oclass, AxisAlignedBB axisalignedbb) { return a(oclass, axisalignedbb); } // Origami - OBFHELPER
     default <T extends Entity> List<T> a(Class<? extends T> oclass, AxisAlignedBB axisalignedbb) {
         return this.a(oclass, axisalignedbb, IEntitySelector.f);
     }
-- 
2.25.1.windows.1

