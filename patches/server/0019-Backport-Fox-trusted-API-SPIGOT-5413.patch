From 19b118d8919e2a394cf6bbdd72a7b5229e95c15c Mon Sep 17 00:00:00 2001
From: Phoenix616 <mail@moep.tv>
Date: Sat, 28 Dec 2019 19:14:18 +0100
Subject: [PATCH] Backport Fox trusted API (SPIGOT-5413)

---
 .../java/net/minecraft/server/EntityFox.java  |  4 +-
 .../bukkit/craftbukkit/entity/CraftFox.java   | 50 +++++++++++++++++++
 2 files changed, 52 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EntityFox.java b/src/main/java/net/minecraft/server/EntityFox.java
index ca38ccf7..17511525 100644
--- a/src/main/java/net/minecraft/server/EntityFox.java
+++ b/src/main/java/net/minecraft/server/EntityFox.java
@@ -17,8 +17,8 @@ public class EntityFox extends EntityAnimal {
 
     private static final DataWatcherObject<Integer> bz = DataWatcher.a(EntityFox.class, DataWatcherRegistry.b);
     private static final DataWatcherObject<Byte> bA = DataWatcher.a(EntityFox.class, DataWatcherRegistry.a);
-    private static final DataWatcherObject<Optional<UUID>> bB = DataWatcher.a(EntityFox.class, DataWatcherRegistry.o);
-    private static final DataWatcherObject<Optional<UUID>> bC = DataWatcher.a(EntityFox.class, DataWatcherRegistry.o);
+    public static final DataWatcherObject<Optional<UUID>> bB = DataWatcher.a(EntityFox.class, DataWatcherRegistry.o); // Origami - make public
+    public static final DataWatcherObject<Optional<UUID>> bC = DataWatcher.a(EntityFox.class, DataWatcherRegistry.o); // Origami - make public
     private static final Predicate<EntityItem> bD = (entityitem) -> {
         return !entityitem.q() && entityitem.isAlive();
     };
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftFox.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftFox.java
index 2e2c253f..181d03c0 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftFox.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftFox.java
@@ -63,4 +63,54 @@ public class CraftFox extends CraftAnimals implements Fox {
     public void setSleeping(boolean sleeping) {
         getHandle().setSleeping(sleeping);
     }
+
+    // Origami start - backport Fox trusted API SPIGOT-5413
+    @Override
+    public org.bukkit.entity.AnimalTamer getFirstTrustedPlayer() {
+        java.util.UUID uuid = getHandle().getDataWatcher().get(EntityFox.bB).orElse(null);
+        if (uuid == null) {
+            return null;
+        }
+
+        org.bukkit.entity.AnimalTamer player = getServer().getPlayer(uuid);
+        if (player == null) {
+            player = getServer().getOfflinePlayer(uuid);
+        }
+
+        return player;
+    }
+
+    @Override
+    public void setFirstTrustedPlayer(org.bukkit.entity.AnimalTamer player) {
+        if (player == null && getHandle().getDataWatcher().get(EntityFox.bC).isPresent()) {
+            throw new IllegalStateException("Must remove second trusted player first");
+        }
+
+        getHandle().getDataWatcher().set(EntityFox.bB, player == null ? java.util.Optional.empty() : java.util.Optional.of(player.getUniqueId()));
+    }
+
+    @Override
+    public org.bukkit.entity.AnimalTamer getSecondTrustedPlayer() {
+        java.util.UUID uuid = getHandle().getDataWatcher().get(EntityFox.bC).orElse(null);
+        if (uuid == null) {
+            return null;
+        }
+
+        org.bukkit.entity.AnimalTamer player = getServer().getPlayer(uuid);
+        if (player == null) {
+            player = getServer().getOfflinePlayer(uuid);
+        }
+
+        return player;
+    }
+
+    @Override
+    public void setSecondTrustedPlayer(org.bukkit.entity.AnimalTamer player) {
+        if (player != null && !getHandle().getDataWatcher().get(EntityFox.bB).isPresent()) {
+            throw new IllegalStateException("Must add first trusted player first");
+        }
+
+        getHandle().getDataWatcher().set(EntityFox.bC, player == null ? java.util.Optional.empty() : java.util.Optional.of(player.getUniqueId()));
+    }
+    // Origami end
 }
-- 
2.18.0.windows.1

