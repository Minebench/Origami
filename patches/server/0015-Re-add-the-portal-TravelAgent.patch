From 577a5b04d43b6a85a8cf4ea876d90aeeb71c2b9f Mon Sep 17 00:00:00 2001
From: Phoenix616 <mail@moep.tv>
Date: Sat, 21 Dec 2019 02:17:02 +0100
Subject: [PATCH] Re-add the portal TravelAgent

---
 .../net/minecraft/server/BlockPortal.java     |   6 +
 .../java/net/minecraft/server/Entity.java     |  38 +++++-
 .../net/minecraft/server/EntityPlayer.java    |  32 ++++-
 .../minecraft/server/PortalTravelAgent.java   |  58 +++++----
 .../net/minecraft/server/WorldServer.java     |   2 +-
 .../bukkit/craftbukkit/CraftTravelAgent.java  | 110 ++++++++++++++++++
 6 files changed, 220 insertions(+), 26 deletions(-)
 create mode 100644 src/main/java/org/bukkit/craftbukkit/CraftTravelAgent.java

diff --git a/src/main/java/net/minecraft/server/BlockPortal.java b/src/main/java/net/minecraft/server/BlockPortal.java
index 4eef7127..9358a89a 100644
--- a/src/main/java/net/minecraft/server/BlockPortal.java
+++ b/src/main/java/net/minecraft/server/BlockPortal.java
@@ -350,6 +350,7 @@ public class BlockPortal extends Block {
                 return false;
             }
             // CraftBukkit end
+            /* Origami start - re-add TravelAgent (make blocks in PortalCreateEvent modifiable)
             for (int i = 0; i < this.width; ++i) {
                 BlockPosition blockposition = this.position.shift(this.c, i);
 
@@ -357,6 +358,11 @@ public class BlockPortal extends Block {
                     this.a.setTypeAndData(blockposition.up(j), (IBlockData) Blocks.NETHER_PORTAL.getBlockData().set(BlockPortal.AXIS, this.b), 18);
                 }
             }
+            */
+            for (org.bukkit.block.BlockState blockstate : blocks) {
+                blockstate.update(true);
+            }
+            // Origami end
 
             return true; // CraftBukkit
         }
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index e8def7f8..4714cc79 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -2635,13 +2635,45 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
                 Location enter = this.getBukkitEntity().getLocation();
                 Location exit = new Location(worldserver1.getWorld(), blockposition.getX(), blockposition.getY(), blockposition.getZ());
 
-                EntityPortalEvent event = new EntityPortalEvent(this.getBukkitEntity(), enter, exit);
+                // Origami start - re-add TravelAgent
+                boolean useTravelAgent = dimensionmanager1.getDimensionID() < CraftWorld.CUSTOM_DIMENSION_OFFSET && dimensionmanager != DimensionManager.THE_END && dimensionmanager1 != DimensionManager.THE_END; // don't use agent for custom worlds or return from THE_END
+
+                org.bukkit.TravelAgent agent = exit != null ? (org.bukkit.TravelAgent) ((CraftWorld) exit.getWorld()).getHandle().getTravelAgent() : org.bukkit.craftbukkit.CraftTravelAgent.DEFAULT; // return arbitrary TA to compensate for implementation dependent plugins
+                boolean oldCanCreate = agent.getCanCreatePortal();
+                agent.setCanCreatePortal(false); // General entities cannot create portals
+
+                EntityPortalEvent event = new EntityPortalEvent(this.getBukkitEntity(), enter, exit, agent);
+                event.useTravelAgent(useTravelAgent);
+                // Origami end - re-add TravelAgent
                 event.getEntity().getServer().getPluginManager().callEvent(event);
                 if (event.isCancelled() || event.getTo() == null || event.getTo().getWorld() == null || !this.isAlive()) {
+                    agent.setCanCreatePortal(oldCanCreate); // Origami - re-add TravelAgent
                     return null;
                 }
-
-                exit = event.getTo();
+                // Origami start - re-add TravelAgent
+                if (event.useTravelAgent()) {
+                    if (!event.getTo().getWorld().getWorldBorder().isInside(event.getTo())) {
+                        return null;
+                    }
+                    world.captureBlockStates = true;
+                    exit = event.getPortalTravelAgent().findOrCreate(event.getEntity(), event.getTo());
+                    world.captureBlockStates = false;
+                    if (world.capturedBlockStates.size() > 0) {
+                        List<org.bukkit.block.BlockState> blocks = (List<org.bukkit.block.BlockState>) world.capturedBlockStates.clone();
+                        org.bukkit.event.world.PortalCreateEvent createEvent = new org.bukkit.event.world.PortalCreateEvent(blocks, event.getTo().getWorld(), event.getEntity(), org.bukkit.event.world.PortalCreateEvent.CreateReason.NETHER_PAIR);
+
+                        this.world.getServer().getPluginManager().callEvent(createEvent);
+                        if (!createEvent.isCancelled()) {
+                            for (org.bukkit.block.BlockState blockstate : blocks) {
+                                blockstate.update(true);
+                            }
+                        }
+                    }
+                } else {
+                    exit = event.getTo();
+                }
+                agent.setCanCreatePortal(oldCanCreate);
+                // Origami end - re-add TravelAgent
                 worldserver1 = ((CraftWorld) exit.getWorld()).getHandle();
                 blockposition = new BlockPosition(exit.getX(), exit.getY(), exit.getZ());
             }
diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index faa321f7..f3f081c8 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -851,13 +851,41 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
             // CraftBukkit start
             Location enter = this.getBukkitEntity().getLocation();
             Location exit = (worldserver1 == null) ? null : new Location(worldserver1.getWorld(), d0, d1, d2, f1, f);
-            PlayerPortalEvent event = new PlayerPortalEvent(this.getBukkitEntity(), enter, exit, cause);
+            // Origami start - re-add TravelAgent
+            boolean useTravelAgent = dimensionmanager1.getDimensionID() < CraftWorld.CUSTOM_DIMENSION_OFFSET && dimensionmanager != DimensionManager.THE_END && dimensionmanager1 != DimensionManager.THE_END; // don't use agent for custom worlds or return from THE_END
+
+            org.bukkit.TravelAgent agent = (org.bukkit.TravelAgent) ((CraftWorld) (exit == null ? enter.getWorld() : exit.getWorld())).getHandle().getTravelAgent();
+            PlayerPortalEvent event = new PlayerPortalEvent(this.getBukkitEntity(), enter, exit, agent, cause);
+            event.useTravelAgent(useTravelAgent);
+            // Origami end
             Bukkit.getServer().getPluginManager().callEvent(event);
             if (event.isCancelled() || event.getTo() == null) {
                 return null;
             }
 
-            exit = event.getTo();
+            // Origami start - re-add TravelAgent
+            if (event.useTravelAgent()) {
+                if (!event.getTo().getWorld().getWorldBorder().isInside(event.getTo())) {
+                    return null;
+                }
+                world.captureBlockStates = true;
+                exit = event.getPortalTravelAgent().findOrCreate(event.getPlayer(), event.getTo());
+                world.captureBlockStates = false;
+                if (world.capturedBlockStates.size() > 0) {
+                    List<org.bukkit.block.BlockState> blocks = (List<org.bukkit.block.BlockState>) world.capturedBlockStates.clone();
+                    org.bukkit.event.world.PortalCreateEvent createEvent = new org.bukkit.event.world.PortalCreateEvent(blocks, event.getTo().getWorld(), event.getPlayer(), org.bukkit.event.world.PortalCreateEvent.CreateReason.NETHER_PAIR);
+
+                    this.world.getServer().getPluginManager().callEvent(createEvent);
+                    if (!createEvent.isCancelled()) {
+                        for (org.bukkit.block.BlockState blockstate : blocks) {
+                            blockstate.update(true);
+                        }
+                    }
+                }
+            } else {
+                exit = event.getTo();
+            }
+            // Origami end
             if (exit == null) {
                 return null;
             }
diff --git a/src/main/java/net/minecraft/server/PortalTravelAgent.java b/src/main/java/net/minecraft/server/PortalTravelAgent.java
index 2f0a8e4b..71c99546 100644
--- a/src/main/java/net/minecraft/server/PortalTravelAgent.java
+++ b/src/main/java/net/minecraft/server/PortalTravelAgent.java
@@ -53,6 +53,13 @@ public class PortalTravelAgent {
 
     @Nullable
     public ShapeDetector.Shape a(BlockPosition blockposition, Vec3D vec3d, EnumDirection enumdirection, double d0, double d1, boolean flag) {
+        // Origami start - re-add TravelAgent (Allow for custom portal search radius)
+        return findPortal(blockposition, vec3d, enumdirection, d0, d1, flag, world.paperConfig.portalSearchRadius);
+    }
+
+    @Nullable
+    public ShapeDetector.Shape findPortal(BlockPosition blockposition, Vec3D vec3d, EnumDirection enumdirection, double d0, double d1, boolean flag, int portalSearchRadius) {
+        // Origami end
         boolean flag1 = true;
         boolean flag2 = true;
         BlockPosition blockposition1 = null;
@@ -70,11 +77,11 @@ public class PortalTravelAgent {
             } else {
                 double d2 = Double.MAX_VALUE;
 
-                int portalSearchRadius = world.paperConfig.portalSearchRadius; // Paper
+                // int portalSearchRadius = world.paperConfig.portalSearchRadius; // Paper // Origami - re-add TravelAgent (Allow for custom portal search radius)
                 for (int i = -portalSearchRadius; i <= portalSearchRadius; ++i) { // Paper
                     BlockPosition blockposition2;
 
-                    for (int j = -world.paperConfig.portalSearchRadius; j <= world.paperConfig.portalSearchRadius; ++j) { // Paper
+                    for (int j = -portalSearchRadius; j <= portalSearchRadius; ++j) { // Paper // Origami - u wot m8?
                         for (BlockPosition blockposition3 = blockposition.b(i, this.world.getHeight() - 1 - blockposition.getY(), j); blockposition3.getY() >= 0; blockposition3 = blockposition2) {
                             blockposition2 = blockposition3.down();
                             if (this.world.getType(blockposition3).getBlock() == PortalTravelAgent.b) {
@@ -122,11 +129,19 @@ public class PortalTravelAgent {
     }
 
     public boolean a(Entity entity) {
+        // Origami start - re-add TravelAgent (Allow for portal creation to be based on coordinates instead of entity and add custom creation radius)
+        return this.createPortal(entity.getBukkitEntity(), entity.locX, entity.locY, entity.locZ, 16) != null;
+    }
+
+    public org.bukkit.Location createPortal(org.bukkit.entity.Entity entity, double x, double y, double z, int creationRadius) {
+        // Origami end
         boolean flag = true;
         double d0 = -1.0D;
-        int i = MathHelper.floor(entity.locX);
-        int j = MathHelper.floor(entity.locY);
-        int k = MathHelper.floor(entity.locZ);
+        // Origami start - re-add TravelAgent
+        int i = MathHelper.floor(x);
+        int j = MathHelper.floor(y);
+        int k = MathHelper.floor(z);
+        // Origami end
         int l = i;
         int i1 = j;
         int j1 = k;
@@ -150,11 +165,11 @@ public class PortalTravelAgent {
         double d3;
         double d4;
 
-        for (i2 = i - 16; i2 <= i + 16; ++i2) {
-            d1 = (double) i2 + 0.5D - entity.locX;
+        for (i2 = i - creationRadius; i2 <= i + creationRadius; ++i2) { // Origami - re-add TravelAgent (creation radius)
+            d1 = (double) i2 + 0.5D - x; // Origami - re-add TravelAgent
 
-            for (j2 = k - 16; j2 <= k + 16; ++j2) {
-                d2 = (double) j2 + 0.5D - entity.locZ;
+            for (j2 = k - creationRadius; j2 <= k + creationRadius; ++j2) { // Origami - re-add TravelAgent (creation radius)
+                d2 = (double) j2 + 0.5D - z; // Origami - re-add TravelAgent
 
                 label257:
                 for (k2 = this.world.getHeight() - 1; k2 >= 0; --k2) {
@@ -186,7 +201,7 @@ public class PortalTravelAgent {
                                 }
                             }
 
-                            d3 = (double) k2 + 0.5D - entity.locY;
+                            d3 = (double) k2 + 0.5D - y; // Origami - re-add TravelAgent
                             d4 = d1 * d1 + d3 * d3 + d2 * d2;
                             if (d0 < 0.0D || d4 < d0) {
                                 d0 = d4;
@@ -202,11 +217,11 @@ public class PortalTravelAgent {
         }
 
         if (d0 < 0.0D) {
-            for (i2 = i - 16; i2 <= i + 16; ++i2) {
-                d1 = (double) i2 + 0.5D - entity.locX;
+            for (i2 = i - creationRadius; i2 <= i + creationRadius; ++i2) { // Origami - re-add TravelAgent (creation radius)
+                d1 = (double) i2 + 0.5D - x; // Origami - re-add TravelAgent
 
-                for (j2 = k - 16; j2 <= k + 16; ++j2) {
-                    d2 = (double) j2 + 0.5D - entity.locZ;
+                for (j2 = k - creationRadius; j2 <= k + creationRadius; ++j2) { // Origami - re-add TravelAgent (creation radius)
+                    d2 = (double) j2 + 0.5D - z; // Origami - re-add TravelAgent
 
                     label205:
                     for (k2 = this.world.getHeight() - 1; k2 >= 0; --k2) {
@@ -231,7 +246,7 @@ public class PortalTravelAgent {
                                     }
                                 }
 
-                                d3 = (double) k2 + 0.5D - entity.locY;
+                                d3 = (double) k2 + 0.5D - y; // Origami - re-add TravelAgent
                                 d4 = d1 * d1 + d3 * d3 + d2 * d2;
                                 if (d0 < 0.0D || d4 < d0) {
                                     d0 = d4;
@@ -259,7 +274,7 @@ public class PortalTravelAgent {
             l5 = -l5;
         }
 
-        org.bukkit.craftbukkit.util.BlockStateListPopulator blockList = new org.bukkit.craftbukkit.util.BlockStateListPopulator(this.world); // CraftBukkit - Use BlockStateListPopulator
+        //org.bukkit.craftbukkit.util.BlockStateListPopulator blockList = new org.bukkit.craftbukkit.util.BlockStateListPopulator(this.world); // CraftBukkit - Use BlockStateListPopulator // Origami - re-add TravelAgent
         if (d0 < 0.0D) {
             i1 = MathHelper.clamp(i1, 70, this.world.getHeight() - 10);
             j5 = i1;
@@ -273,7 +288,7 @@ public class PortalTravelAgent {
                         boolean flag1 = l2 < 0;
 
                         blockposition_mutableblockposition.d(j3, l3, i4);
-                        blockList.setTypeAndData(blockposition_mutableblockposition, flag1 ? Blocks.OBSIDIAN.getBlockData() : Blocks.AIR.getBlockData(), 3); // CraftBukkit
+                        this.world.setTypeUpdate(blockposition_mutableblockposition, flag1 ? Blocks.OBSIDIAN.getBlockData() : Blocks.AIR.getBlockData()); // Origami - re-add TravelAgent
                     }
                 }
             }
@@ -283,7 +298,7 @@ public class PortalTravelAgent {
             for (i3 = -1; i3 < 4; ++i3) {
                 if (k2 == -1 || k2 == 2 || i3 == -1 || i3 == 3) {
                     blockposition_mutableblockposition.d(i5 + k2 * k5, j5 + i3, j2 + k2 * l5);
-                    blockList.setTypeAndData(blockposition_mutableblockposition, Blocks.OBSIDIAN.getBlockData(), 3); // CraftBukkit
+                    this.world.setTypeUpdate(blockposition_mutableblockposition, Blocks.OBSIDIAN.getBlockData()); // Origami - re-add TravelAgent
                 }
             }
         }
@@ -293,10 +308,10 @@ public class PortalTravelAgent {
         for (i3 = 0; i3 < 2; ++i3) {
             for (l2 = 0; l2 < 3; ++l2) {
                 blockposition_mutableblockposition.d(i5 + i3 * k5, j5 + l2, j2 + i3 * l5);
-                blockList.setTypeAndData(blockposition_mutableblockposition, iblockdata, 18); // CraftBukkit
+                this.world.setTypeAndData(blockposition_mutableblockposition, iblockdata, 18);  // Origami - re-add TravelAgent
             }
         }
-
+        /* Origami start - re-add TravelAgent
         // CraftBukkit start
         org.bukkit.World bworld = this.world.getWorld();
         org.bukkit.event.world.PortalCreateEvent event = new org.bukkit.event.world.PortalCreateEvent((java.util.List<org.bukkit.block.BlockState>) (java.util.List) blockList.getList(), bworld, entity.getBukkitEntity(), org.bukkit.event.world.PortalCreateEvent.CreateReason.NETHER_PAIR);
@@ -307,6 +322,9 @@ public class PortalTravelAgent {
         }
         // CraftBukkit end
         return true;
+        */
+        return new org.bukkit.Location(this.world.getWorld(), i5 + 0.5, j5, j2 + 0.5, entity.getLocation().getYaw(), entity.getLocation().getPitch());
+        //Origami end
     }
 
     public void a(long i) {
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index f42463d9..74c6fb12 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -188,7 +188,7 @@ public class WorldServer extends World {
         this.I = new ObjectLinkedOpenHashSet();
         this.dataManager = worldnbtstorage;
         this.server = minecraftserver;
-        this.portalTravelAgent = new PortalTravelAgent(this);
+        this.portalTravelAgent = new org.bukkit.craftbukkit.CraftTravelAgent(this); // Origami - re-add TravelAgent
         this.M();
         this.N();
         this.getWorldBorder().a(minecraftserver.aw());
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftTravelAgent.java b/src/main/java/org/bukkit/craftbukkit/CraftTravelAgent.java
new file mode 100644
index 00000000..06e20069
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/CraftTravelAgent.java
@@ -0,0 +1,110 @@
+package org.bukkit.craftbukkit;
+
+import net.minecraft.server.BlockPosition;
+import net.minecraft.server.EnumDirection;
+import net.minecraft.server.PortalTravelAgent;
+import net.minecraft.server.ShapeDetector;
+import net.minecraft.server.Vec3D;
+import net.minecraft.server.WorldServer;
+
+import org.bukkit.Location;
+import org.bukkit.TravelAgent;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.entity.Entity;
+import org.bukkit.util.Vector;
+
+public class CraftTravelAgent extends PortalTravelAgent implements TravelAgent {
+
+    public static TravelAgent DEFAULT = null;
+
+    private int searchRadius;
+    private int creationRadius = 16;
+    private boolean canCreatePortal = true;
+
+    public CraftTravelAgent(WorldServer worldserver) {
+        super(worldserver);
+        searchRadius = worldserver.paperConfig.portalSearchRadius;
+        if (DEFAULT == null && worldserver.worldProvider.isOverworld()) {
+            DEFAULT = this;
+        }
+    }
+
+    @Override
+    public Location findOrCreate(Location target) {
+        return findOrCreate(null, target);
+    }
+
+    @Override
+    public Location findOrCreate(Entity entity, Location target) {
+        Location found = this.findPortal(entity, target);
+        if (found == null && this.getCanCreatePortal()) {
+            found = this.createPortal(entity, target);
+        }
+        if (found == null) {
+            found = target; // fallback to original if unable to find or create
+        }
+
+        return found;
+    }
+
+    @Override
+    public Location findPortal(Location location) {
+        return findPortal(null, location);
+    }
+
+    @Override
+    public Location findPortal(Entity entity, Location location) {
+        PortalTravelAgent pta = ((CraftWorld) location.getWorld()).getHandle().getTravelAgent();
+        Vector direction = location.getDirection();
+        Vec3D portalOffset = entity != null ? ((CraftEntity) entity).getHandle().getPortalOffset() : new Vec3D(0, 0, 0);
+        EnumDirection portalDirection = entity != null ? ((CraftEntity) entity).getHandle().getPortalDirection() : EnumDirection.fromAngle(location.getYaw());
+        ShapeDetector.Shape portalShape = pta.findPortal( // PAIL: rename ShapeDetector.Shape
+                new BlockPosition(location.getX(), location.getY(), location.getZ()),
+                new Vec3D(direction.getX(), direction.getY(), direction.getZ()),
+                portalDirection, portalOffset.x, portalOffset.y, canCreatePortal, this.getSearchRadius());
+        return portalShape != null ? new Location(location.getWorld(), portalShape.position.getX(), portalShape.position.getY(), portalShape.position.getZ(), location.getYaw(), location.getPitch()) : null;  // PAIL: rename position
+    }
+
+    @Override
+    public boolean createPortal(Location location) {
+        return createPortal(null, location) != null;
+    }
+
+    @Override
+    public Location createPortal(Entity entity, Location location) {
+        PortalTravelAgent pta = ((CraftWorld) location.getWorld()).getHandle().getTravelAgent();
+        return pta.createPortal(entity, location.getX(), location.getY(), location.getZ(), this.getCreationRadius());
+    }
+
+    @Override
+    public TravelAgent setSearchRadius(int radius) {
+        this.searchRadius = radius;
+        return this;
+    }
+
+    @Override
+    public int getSearchRadius() {
+        return this.searchRadius;
+    }
+
+    @Override
+    public TravelAgent setCreationRadius(int radius) {
+        this.creationRadius = radius < 2 ? 0 : radius;
+        return this;
+    }
+
+    @Override
+    public int getCreationRadius() {
+        return this.creationRadius;
+    }
+
+    @Override
+    public boolean getCanCreatePortal() {
+        return this.canCreatePortal;
+    }
+
+    @Override
+    public void setCanCreatePortal(boolean create) {
+        this.canCreatePortal = create;
+    }
+}
\ No newline at end of file
-- 
2.18.0.windows.1

