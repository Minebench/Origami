From 941e715641dcfb22a158b02dd10356f694dd5da1 Mon Sep 17 00:00:00 2001
From: Phoenix616 <mail@moep.tv>
Date: Fri, 10 Jan 2020 01:06:43 +0100
Subject: [PATCH] Fix wrong Nether Portal PlayerTeleportEvent

This fixes an issue where the player position is changed multiple times
while using a nether portal as well as calling the PlayerTeleportEvent
multiple times, even once with the wrong world and with the UNKNOWN cause.

Also fixes an issue with the target portal rotation not getting applied
on teleporting.
---
 .../net/minecraft/server/EntityPlayer.java    | 101 +++++++++++++++---
 .../minecraft/server/PlayerConnection.java    |   2 +-
 .../minecraft/server/PortalTravelAgent.java   |  30 +++---
 3 files changed, 106 insertions(+), 27 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index be56be5c..a867515f 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -868,6 +868,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
                 return null;
             }
 
+            /* Origami start - fix wrong Nether Portal PlayerTeleportEvent
             PlayerTeleportEvent tpEvent = new PlayerTeleportEvent(this.getBukkitEntity(), enter, exit, cause);
             Bukkit.getServer().getPluginManager().callEvent(tpEvent);
             if (tpEvent.isCancelled() || tpEvent.getTo() == null) {
@@ -878,14 +879,17 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
             if (exit == null) {
                 return null;
             }
+            */ // Origami end
             worldserver1 = ((CraftWorld) exit.getWorld()).getHandle();
             d0 = exit.getX();
             d1 = exit.getY();
             d2 = exit.getZ();
             f1 = exit.getYaw();
             f = exit.getPitch();
-            this.worldChangeInvuln = true; // CraftBukkit - Set teleport invulnerability only if player changing worlds
+            //this.worldChangeInvuln = true; // CraftBukkit - Set teleport invulnerability only if player changing worlds // Origami - fix wrong Nether Portal PlayerTeleportEvent
             dimensionmanager = worldserver1.getWorldProvider().getDimensionManager();
+            /* Origami start - fix wrong Nether Portal PlayerTeleportEvent
+            // Moved to own method teleportWithEvent
             // CraftBukkit end
 
             // CraftBukkit start
@@ -898,6 +902,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
             playerlist.d(this);
             worldserver.removePlayer(this);
             this.dead = false;
+            */ // Origami end
             // CraftBukkit end
 
             //this.setPositionRotation(d0, d1, d2, f1, f); // Origami - don't set position twice...
@@ -910,11 +915,13 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
 
             d0 = MathHelper.a(d0, d4, d6);
             d2 = MathHelper.a(d2, d5, d7);
-            this.setPositionRotation(d0, d1, d2, f1, f);
+            //this.setPositionRotation(d0, d1, d2, f1, f); // Origami - fix wrong Nether Portal PlayerTeleportEvent - moved down
             if (dimensionmanager.getType() == DimensionManager.THE_END) { // CraftBukkit - getType()
-                int i = MathHelper.floor(this.locX);
-                int j = MathHelper.floor(this.locY) - 1;
-                int k = MathHelper.floor(this.locZ);
+                // Origami start - fix wrong Nether Portal PlayerTeleportEvent
+                int i = MathHelper.floor(d0);
+                int j = MathHelper.floor(d1) - 1;
+                int k = MathHelper.floor(d2);
+                // Origami end
                 boolean flag = true;
                 boolean flag1 = false;
                 org.bukkit.craftbukkit.util.BlockStateListPopulator blockList = new org.bukkit.craftbukkit.util.BlockStateListPopulator(worldserver1); // CraftBukkit - Use BlockStateListPopulator
@@ -941,18 +948,58 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
                     blockList.updateList();
                 }
                 // CraftBukkit end
-                this.setPositionRotation((double) i, (double) j, (double) k, f1, 0.0F);
+                // Origami start - fix wrong Nether Portal PlayerTeleportEvent
+                exit.setX(i);
+                exit.setY(j);
+                exit.setZ(k);
+                exit.setYaw(f1);
+                exit.setPitch(0);
+                exit = teleportWithEvent(worldserver, dimensionmanager, enter, exit, cause);
+                if (exit == null) {
+                    return null;
+                }
+                worldserver1 = ((CraftWorld) exit.getWorld()).getHandle();
+                // Origami end
                 this.setMot(Vec3D.a);
                 // Origami start - re-add TravelAgent
             } else {
             //} else if (!worldserver1.getTravelAgent().a(this, f2)) {
                 //worldserver1.getTravelAgent().a((Entity) this);
                 //worldserver1.getTravelAgent().a(this, f2);
-                if (event.useTravelAgent()
-                        && !worldserver1.getTravelAgent().findPortalAndTeleport(this, f2, event.getPortalTravelAgent().getSearchRadius())
-                        && event.getPortalTravelAgent().getCanCreatePortal()
-                        && worldserver1.getTravelAgent().createPortal(this, event.getPortalTravelAgent().getCreationRadius())) {
-                    worldserver1.getTravelAgent().findPortalAndTeleport(this, f2, event.getPortalTravelAgent().getSearchRadius());
+                if (event.useTravelAgent()) {
+                    // Origami start - fix wrong Nether Portal PlayerTeleportEvent
+                    // From PortalTravelAgent#findPortalAndTeleport
+                    Vec3D vec3d = this.getPortalOffset();
+                    EnumDirection enumdirection = this.getPortalDirection();
+                    BlockPosition exitPosition = new BlockPosition(exit.getX(), exit.getY(), exit.getZ());
+                    ShapeDetector.Shape shape = worldserver1.getTravelAgent().findPortal(
+                            exitPosition, this.getMot(), enumdirection, vec3d.x, vec3d.y, true,
+                            event.getPortalTravelAgent().getSearchRadius());
+                    if (shape == null && event.getPortalTravelAgent().getCanCreatePortal()
+                            && worldserver1.getTravelAgent().createPortal(this, exitPosition, event.getPortalTravelAgent().getCreationRadius())) {
+                        shape = worldserver1.getTravelAgent().findPortal(
+                                new BlockPosition(exit.getX(), exit.getY(), exit.getZ()),
+                                this.getMot(), enumdirection, vec3d.x, vec3d.y, true,
+                                event.getPortalTravelAgent().getSearchRadius());
+                    }
+                    if (shape == null) {
+                        return null;
+                    }
+                    exit.setX(shape.position.x);
+                    exit.setY(shape.position.y);
+                    exit.setZ(shape.position.z);
+                    // Let's try to point the player in the right direction.
+                    // Just adding the yaw wont work as it might flip the player due to inverted shape detection.
+                    // Try to use the normal yaw of the player but rotate by 90 degrees if we detect a portal shape rotation.
+                    if (shape.yaw % 180 != 0) {
+                        exit.setYaw(exit.getYaw() + 90);
+                    }
+                    exit = teleportWithEvent(worldserver, dimensionmanager, enter, exit, cause);
+                    if (exit == null) {
+                        return null;
+                    }
+                    this.setMot(shape.velocity);
+                    // Origami end
                 }
                 // Origami end
             }
@@ -961,9 +1008,11 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
             this.spawnIn(worldserver1);
             worldserver1.addPlayerPortal(this);
             this.b(worldserver);
-            this.playerConnection.a(this.locX, this.locY, this.locZ, f1, f);
+            this.playerConnection.a(this.locX, this.locY, this.locZ, this.yaw, this.pitch, java.util.Collections.emptySet(), TeleportCause.NETHER_PORTAL); // Origami - fix wrong Nether Portal PlayerTeleportEvent
+            this.playerConnection.syncPosition(); // Origami - fix wrong Nether Portal PlayerTeleportEvent (PortalTravelAgent synces position after teleporting so we do too)
             this.playerInteractManager.a(worldserver1);
             this.playerConnection.sendPacket(new PacketPlayOutAbilities(this.abilities));
+            PlayerList playerlist = this.server.getPlayerList(); // Origami - fix wrong Nether Portal PlayerTeleportEvent
             playerlist.a(this, worldserver1);
             playerlist.updateClient(this);
             Iterator iterator = this.getEffects().iterator();
@@ -989,6 +1038,34 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         }
     }
 
+    // Origami start
+    // Moved down from before portal creation
+    // returns exit
+    private Location teleportWithEvent(WorldServer worldserver, DimensionManager dimensionmanager, Location enter, Location exit, TeleportCause cause) {
+        PlayerTeleportEvent tpEvent = new PlayerTeleportEvent(this.getBukkitEntity(), enter, exit, cause);
+        Bukkit.getServer().getPluginManager().callEvent(tpEvent);
+        if (tpEvent.isCancelled() || tpEvent.getTo() == null) {
+            return null;
+        }
+
+        exit = tpEvent.getTo();
+
+        this.worldChangeInvuln = true;
+        this.dimension = dimensionmanager;
+
+        this.playerConnection.sendPacket(new PacketPlayOutRespawn(((CraftWorld) exit.getWorld()).getHandle().worldProvider.getDimensionManager().getType(), this.world.getWorldData().getType(), this.playerInteractManager.getGameMode()));
+        this.playerConnection.sendPacket(new PacketPlayOutServerDifficulty(this.world.getDifficulty(), this.world.getWorldData().isDifficultyLocked()));
+        PlayerList playerlist = this.server.getPlayerList();
+
+        playerlist.d(this);
+        worldserver.removePlayer(this);
+        this.dead = false;
+
+        this.setPositionRotation(exit.getX(), exit.getY(), exit.getZ(), exit.getYaw(), exit.getPitch());
+        return exit;
+    }
+    // Origami end
+
     public void b(WorldServer worldserver) { // PAIL
         DimensionManager dimensionmanager = worldserver.worldProvider.getDimensionManager();
         DimensionManager dimensionmanager1 = this.world.worldProvider.getDimensionManager();
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index ae17cdf2..2b3e2b2b 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -1170,7 +1170,7 @@ public class PlayerConnection implements PacketListenerPlayIn {
 
         Location to = new Location(this.getPlayer().getWorld(), x, y, z, yaw, pitch);
         // SPIGOT-5171: Triggered on join
-        if (from.equals(to)) {
+        if (from.equals(to) || cause == PlayerTeleportEvent.TeleportCause.NETHER_PORTAL) { // Origami - fix wrong Nether Portal PlayerTeleportEvent
             this.internalTeleport(d0, d1, d2, f, f1, set);
             return;
         }
diff --git a/src/main/java/net/minecraft/server/PortalTravelAgent.java b/src/main/java/net/minecraft/server/PortalTravelAgent.java
index 6b8c1874..89c282f7 100644
--- a/src/main/java/net/minecraft/server/PortalTravelAgent.java
+++ b/src/main/java/net/minecraft/server/PortalTravelAgent.java
@@ -29,14 +29,14 @@ public class PortalTravelAgent {
 
     public boolean a(Entity entity, float f) {
         // Origami start - re-add TravelAgent (Allow for custom portal search radius)
-        return findPortalAndTeleport(entity, f, world.paperConfig.portalSearchRadius);
+        return findPortalAndTeleport(entity, new BlockPosition(entity), f, world.paperConfig.portalSearchRadius); // Origami - fix wrong Nether Portal PlayerTeleportEvent
     }
 
-    public boolean findPortalAndTeleport(Entity entity, float f, int portalSearchRadius) {
+    public boolean findPortalAndTeleport(Entity entity, BlockPosition blockPostion, float f, int portalSearchRadius) { // Origami - fix wrong Nether Portal PlayerTeleportEvent
         // Origami end
         Vec3D vec3d = entity.getPortalOffset();
         EnumDirection enumdirection = entity.getPortalDirection();
-        ShapeDetector.Shape shapedetector_shape = this.findPortal(new BlockPosition(entity), entity.getMot(), enumdirection, vec3d.x, vec3d.y, entity instanceof EntityHuman, portalSearchRadius); // Origami - re-add TravelAgent (Allow for custom portal search radius)
+        ShapeDetector.Shape shapedetector_shape = this.findPortal(blockPostion, entity.getMot(), enumdirection, vec3d.x, vec3d.y, entity instanceof EntityHuman, portalSearchRadius); // Origami - re-add TravelAgent (Allow for custom portal search radius) // Fix PlayerTeleportEvent
 
         if (shapedetector_shape == null) {
             return false;
@@ -136,16 +136,18 @@ public class PortalTravelAgent {
 
     public boolean a(Entity entity) {
         // Origami start - re-add TravelAgent (Allow for portal creation to be based on coordinates instead of entity and add custom creation radius)
-        return this.createPortal(entity, 16);
+        return this.createPortal(entity, new BlockPosition(entity), 16); // Origami - fix wrong Nether Portal PlayerTeleportEvent
     }
 
-    public boolean createPortal(Entity entity, int creationRadius) {
+    public boolean createPortal(Entity entity, BlockPosition blockPosition, int creationRadius) { // Origami - fix wrong Nether Portal PlayerTeleportEvent
         // Origami end
         boolean flag = true;
         double d0 = -1.0D;
-        int i = MathHelper.floor(entity.locX);
-        int j = MathHelper.floor(entity.locY);
-        int k = MathHelper.floor(entity.locZ);
+        // Origami start - fix wrong Nether Portal PlayerTeleportEvent
+        int i = blockPosition.getX();
+        int j = blockPosition.getY();
+        int k = blockPosition.getZ();
+        // Origami end
         int l = i;
         int i1 = j;
         int j1 = k;
@@ -170,10 +172,10 @@ public class PortalTravelAgent {
         double d4;
 
         for (i2 = i - creationRadius; i2 <= i + creationRadius; ++i2) { // Origami - re-add TravelAgent (creation radius)
-            d1 = (double) i2 + 0.5D - entity.locX;
+            d1 = (double) i2 + 0.5D - blockPosition.getX(); // Origami - fix wrong Nether Portal PlayerTeleportEvent
 
             for (j2 = k - creationRadius; j2 <= k + creationRadius; ++j2) { // Origami - re-add TravelAgent (creation radius)
-                d2 = (double) j2 + 0.5D - entity.locZ;
+                d2 = (double) j2 + 0.5D - blockPosition.getZ(); // Origami - fix wrong Nether Portal PlayerTeleportEvent
 
                 label257:
                 for (k2 = this.world.getHeight() - 1; k2 >= 0; --k2) {
@@ -205,7 +207,7 @@ public class PortalTravelAgent {
                                 }
                             }
 
-                            d3 = (double) k2 + 0.5D - entity.locY;
+                            d3 = (double) k2 + 0.5D - blockPosition.getY(); // Origami - fix wrong Nether Portal PlayerTeleportEvent
                             d4 = d1 * d1 + d3 * d3 + d2 * d2;
                             if (d0 < 0.0D || d4 < d0) {
                                 d0 = d4;
@@ -222,10 +224,10 @@ public class PortalTravelAgent {
 
         if (d0 < 0.0D) {
             for (i2 = i - creationRadius; i2 <= i + creationRadius; ++i2) { // Origami - re-add TravelAgent (creation radius)
-                d1 = (double) i2 + 0.5D - entity.locX;
+                d1 = (double) i2 + 0.5D - blockPosition.getX(); // Origami - fix wrong Nether Portal PlayerTeleportEvent
 
                 for (j2 = k - creationRadius; j2 <= k + creationRadius; ++j2) { // Origami - re-add TravelAgent (creation radius)
-                    d2 = (double) j2 + 0.5D - entity.locZ;
+                    d2 = (double) j2 + 0.5D - blockPosition.getZ(); // Origami - fix wrong Nether Portal PlayerTeleportEvent
 
                     label205:
                     for (k2 = this.world.getHeight() - 1; k2 >= 0; --k2) {
@@ -250,7 +252,7 @@ public class PortalTravelAgent {
                                     }
                                 }
 
-                                d3 = (double) k2 + 0.5D - entity.locY;
+                                d3 = (double) k2 + 0.5D - blockPosition.getY(); // Origami - fix wrong Nether Portal PlayerTeleportEvent
                                 d4 = d1 * d1 + d3 * d3 + d2 * d2;
                                 if (d0 < 0.0D || d4 < d0) {
                                     d0 = d4;
-- 
2.18.0.windows.1

